name: Deploy Angular to Staging (Manual)

on:
    workflow_dispatch:
        inputs:
            branch:
                description: 'Rama a desplegar en Staging'
                required: true
                type: string
                default: 'master'

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout de la rama seleccionada
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.inputs.branch }}
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Cache Node Modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

            - name: Instalar dependencias
              run: npm ci --prefer-offline

            - name: Crear archivo .htaccess
              run: |
                  cat > src/.htaccess << 'EOL'
                  # Activar el módulo rewrite
                  <IfModule mod_rewrite.c>
                      RewriteEngine On
                      RewriteBase /

                      # Si la solicitud no es para un archivo existente
                      RewriteCond %{REQUEST_FILENAME} !-f
                      # Si la solicitud no es para un directorio existente
                      RewriteCond %{REQUEST_FILENAME} !-d
                      # Entonces redireccionar todo a index.html
                      RewriteRule ^ index.html [L]
                  </IfModule>

                  # Comprimir archivos para mejorar rendimiento
                  <IfModule mod_deflate.c>
                      AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/x-javascript
                  </IfModule>

                  # Caché del navegador
                  <IfModule mod_expires.c>
                      ExpiresActive On
                      ExpiresByType image/jpg "access plus 1 year"
                      ExpiresByType image/jpeg "access plus 1 year"
                      ExpiresByType image/gif "access plus 1 year"
                      ExpiresByType image/png "access plus 1 year"
                      ExpiresByType text/css "access plus 1 month"
                      ExpiresByType application/pdf "access plus 1 month"
                      ExpiresByType text/javascript "access plus 1 month"
                      ExpiresByType application/javascript "access plus 1 month"
                      ExpiresByType application/x-javascript "access plus 1 month"
                      ExpiresByType image/x-icon "access plus 1 year"
                      ExpiresDefault "access plus 2 days"
                  </IfModule>
                  EOL

                  # Mostrar el contenido del archivo creado para verificación
                  cat src/.htaccess

            - name: Build para Staging
              run: |
                  npm install -g @angular/cli@latest
                  npm run build -- --configuration=staging

            - name: Verificar archivos construidos (incluyendo .htaccess)
              run: ls -la ./dist/sakai-ng/browser/

            - name: Desplegar a Staging via SFTP
              uses: SamKirkland/FTP-Deploy-Action@v4.3.4
              with:
                  server: ${{ secrets.STAGING_FTP_SERVER }}
                  username: ${{ secrets.STAGING_FTP_USERNAME }}
                  password: ${{ secrets.STAGING_FTP_PASSWORD }}
                  local-dir: ./dist/sakai-ng/browser/
                  server-dir: ./
                  dangerous-clean-slate: true
